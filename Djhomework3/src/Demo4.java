/*看程序，分析下面程序的结果：(不要运行)
	int x = 2,y=3;

	switch(x)
	{
		default:       //x=2，没有case2执行default，y=3，执行后++等于4
			y++;       //没有break语句，继续执行case3 
		case 3:        //4++后等于5，然后跳出switch。最后打印y=5
			y++;
			break;
		case 4:
			y++;
	}

	System.out.println("y="+y);
	
	
	
5:数组的概念?有什么特点?
数组是指一组数据的集合，数组中的每个数据被称作元素。
在数组中可以存放任意类型的元素，但同一个数组里存放的元素类型必须一致。
特点：数组长度是固定的，数组中存储的元素的数据类型要求一致

6:一维数组的定义格式?
格式1：
数据类型[] 数组名 = new 数据类型[数组长度];
			
格式2:
数据类型[] 数组名 = new 数据类型[]{元素值1,元素值2,..};
	
格式3：
数据类型[] 数组名 = {元素值1,元素值2,..};



7:数组操作的两个小问题?
数组越界异常
每个数组的索引都有一个范围，即0~length-1。在访问数组的元素时，索引不能超出这个范围，否则程序会报错
空指针异常
在使用变量引用一个数组时，变量必须指向一个有效的数组对象，如果该变量的值为null，则意味着没有指向任何数组
，此时通过该变量访问数组的元素会出现空指针异常





8:数组常见操作（遍历）:
	
一维数组遍历：

int[] arr = { 1, 2, 3, 4, 5 }; // 定义数组
// 使用for循环遍历数组的元素
for (int i = 0; i < arr.length; i++) {
System.out.println(arr[i]); // 通过索引访问元素
		}



二维数组遍历：
	int[][] arr2 = { {1,2},{3,4,5},{6,7,8,9,10} };
		for (int i=0; i<arr2.length; i++) {
			for (int j=0; j<arr2[i].length; j++) {
            	System.out.println(arr2[i][j])        //二维数组遍历打印
				
			}
		}
		



*/

public class Demo4 {

}
