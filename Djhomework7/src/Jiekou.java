/*1、多态是什么，多态的前提条件是什么?
      多态为父类引用变量可以指向子类对象。
    多态的前提是必须有子父类关系或者类实现接口关系，否则无法完成多态。
在使用多态后的父类引用变量调用方法时，会调用子类重写后的方法。
   
2、多态中成员访问的特点分别是什么?
成员变量
当子父类中出现同名的成员变量时，多态调用该变量时：
编译时期：参考的是引用型变量所属的类中是否有被调用的成员变量。没有，编译失败。
运行时期：也是调用引用型变量所属的类中的成员变量。
简单记：编译和运行都参考等号的左边。编译运行看左边。
  
成员方法(非静态方法)
编译时期：参考引用变量所属的类，如果没有类中没有调用的方法，编译失败。
运行时期：参考引用变量所指的对象所属的类，并运行对象所属类中的成员方法。
简而言之：编译看左边，运行看右边。

静态方法
编译时确定。

3、什么是接口，它的特点是什么？
接口是功能的集合，同样可看做是一种数据类型，是比抽象类更为抽象的”类”。
接口只描述所应该具备的方法，并没有具体实现，具体的实现由接口的实现类(相当于接口的子类)来完成。这样将功能的定义与实现分离，优化了程序设计。
一切事物均有功能，即一切事物均有接口。

4、接口的成员特点有哪些？
	1、接口中可以定义变量，但是变量必须有固定的修饰符修饰，public static final 所以接口中的变量也称之为常量，其值不能改变。后面我们会讲解static与final关键字
	2、接口中可以定义方法，方法也有固定的修饰符，public abstract
	3、接口不可以创建对象。
	4、子类必须覆盖掉接口中所有的抽象方法后，子类才可以实例化。否则子类是一个抽象类。

5、抽象类和接口的区别是什么?
区别:
	抽象类为部分方法提供实现,避免子类重复实现这些方法,提高代码重用性;接口只能包含抽象方法;
	一个类只能继承一个直接父类(可能是抽象类),却可以实现多个接口;(接口弥补了Java的单继承)
	抽象类是这个事物中应该具备的你内容, 继承体系是一种 is..a关系
	接口是这个事物中的额外内容,继承体系是一种 like..a关系
*/

/*测试: 如果一个方法的返回值类型是父类,那么能否返回一个子类对象.(该父类不管是类,抽象类还是接口)*/

class fu{
	public void show(){
		System.out.println("父show方法执行了");
	}
}
class zi extends fu{
	public void show() {
		System.out.println("子show方法执行了");
	}
}
//测试类
public class Jiekou {
	public static void main(String[] args) {
		
		fu p = method();
		fu z = test();
		p.show();
		z.show();
	}
	

	public static fu method(){  //返回父类
		fu p = new fu();
		return p;
	}
	public static fu test(){    //返回字类对象
		fu p = new zi();
		zi t = (zi)p;
		return t;
		
	}
	
}



